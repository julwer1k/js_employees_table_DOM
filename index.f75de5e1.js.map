{"mappings":"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","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\n// write code here\nconst body = document.querySelector('body');\nconst thead = document.querySelector('thead');\nconst tbody = document.querySelector('tbody');\nconst rows = Array.from(tbody.rows);\n\nlet isSortedASC = true;\nlet lastSortedColumn = -1;\n\nfunction sortTable(e) {\n  if (e.target.tagName === 'TH') {\n    const column = e.target.cellIndex;\n    const type = e.target.textContent;\n\n    if (lastSortedColumn !== column) {\n      isSortedASC = true;\n    }\n\n    const sortedRows = rows.sort((a, b) => {\n      const aText = a.cells[column].textContent;\n      const bText = b.cells[column].textContent;\n\n      if (type === 'Age' || type === 'Salary') {\n        const aNum = parseFloat(aText.replace(/[$,]/g, ''));\n        const bNum = parseFloat(bText.replace(/[$,]/g, ''));\n\n        if (isSortedASC) {\n          return aNum - bNum;\n        }\n\n        return bNum - aNum;\n      } else {\n        if (isSortedASC) {\n          return aText.localeCompare(bText);\n        }\n\n        return bText.localeCompare(aText);\n      }\n    });\n\n    tbody.innerHTML = '';\n    sortedRows.forEach((row) => tbody.appendChild(row));\n\n    isSortedASC = !isSortedASC;\n    lastSortedColumn = column;\n  }\n}\n\nthead.addEventListener('click', sortTable);\n\nfunction highlightRow(e) {\n  if (e.target.tagName === 'TD') {\n    const row = e.target.closest('tr');\n    const activeRow = document.querySelector('tr.active');\n\n    if (activeRow) {\n      activeRow.classList.remove('active');\n    }\n\n    row.classList.add('active');\n  }\n}\n\ntbody.addEventListener('click', highlightRow);\n\nconst saveChanges = (input, initialValue) => {\n  if (input) {\n    const newValue = input.value.trim();\n\n    if (newValue === '') {\n      input.parentNode.textContent = initialValue;\n    } else {\n      input.parentNode.textContent = newValue;\n    }\n    input.remove();\n  }\n};\n\nfunction toEditInput(row) {\n  const cells = row.querySelectorAll('td');\n\n  cells.forEach((cell) => {\n    let cellInput = null;\n    const initialValue = cell.textContent;\n\n    cell.addEventListener('dblclick', () => {\n      if (cellInput) {\n        saveChanges(cellInput, initialValue);\n        cellInput = null;\n      } else {\n        const input = document.createElement('input');\n\n        input.value = initialValue;\n        input.classList.add('cell-input');\n        cell.textContent = '';\n        cell.appendChild(input);\n        input.focus();\n        cellInput = input;\n\n        input.addEventListener('blur', () => {\n          saveChanges(input, initialValue);\n          cellInput = null;\n        });\n\n        input.addEventListener('keydown', (e) => {\n          if (e.key === 'Enter') {\n            saveChanges(input, initialValue);\n            cellInput = null;\n          }\n        });\n      }\n    });\n  });\n}\n\nrows.forEach(toEditInput);\n\n// Add Form\nconst employeeForm = document.createElement('form');\n\nemployeeForm.classList.add('new-employee-form');\n\nemployeeForm.insertAdjacentHTML(\n  'beforeend',\n  `\n<label>Name:\n  <input name=\"name\" type=\"text\" data-qa=\"name\" required autocomplete=\"off\">\n</label>\n<label>Position:\n  <input name=\"position\" type=\"text\" data-qa=\"position\" required>\n</label>\n<label>Office:\n  <select name=\"office\" data-qa=\"office\" required>\n    <option value=\"Tokyo\">Tokyo</option>\n    <option value=\"Singapore\">Singapore</option>\n    <option value=\"London\">London</option>\n    <option value=\"New Yor\">New Yor</option>\n    <option value=\"Edinburgh\">Edinburgh</option>\n    <option value=\"San Francisco\">San Francisco</option>\n  </select>\n</label>\n<label>Age:\n  <input name=\"age\" type=\"text\" data-qa=\"age\" required>\n</label>\n<label>Salary:\n  <input name=\"salary\" type=\"text\" data-qa=\"salary\" required>\n</label>\n<button type=\"submit\">Save to table</button>\n`,\n);\nbody.appendChild(employeeForm);\n\nconst pushNotification = (posTop, posRight, title, errorInput, type) => {\n  let description = '';\n\n  switch (errorInput) {\n    case 'name':\n      description = 'The name field must contain at least 4 characters';\n      break;\n    case 'age':\n      description = `You must be at least 18 and not more than 90 years old.\n        The text must be a number`;\n      break;\n    case 'salary':\n      description = 'Your salary should be a number';\n      break;\n    default:\n      description = 'Your form has been successfully added to the table';\n  }\n\n  document.body.insertAdjacentHTML(\n    'beforeend',\n    `\n    <div class=\"notification ${type}\" data-qa=\"notification\">\n      <h2 class=\"title\">${title}</h2>\n      <p>${description}</p>\n    </div>\n  `,\n  );\n\n  const notificationBlock = document.querySelector('.notification:last-child');\n\n  notificationBlock.style.top = posTop + 'px';\n  notificationBlock.style.right = posRight + 'px';\n\n  setTimeout(() => {\n    notificationBlock.remove();\n  }, 2000);\n};\n\nfunction checkValidateForm(nameValue, age, salary) {\n  const isNotAgeValid = Number(age) < 18 || Number(age) > 90;\n  const isNotSalaryValid = isNaN(Number(salary));\n\n  if (nameValue.length < 4) {\n    return [false, 'name'];\n  } else if (isNotAgeValid) {\n    return [false, 'age'];\n  } else if (isNotSalaryValid) {\n    return [false, 'salary'];\n  }\n\n  return [true, null];\n}\n\nfunction clearForm(...formValue) {\n  formValue.forEach((value) => {\n    value.value = '';\n  });\n}\n\nfunction addRowToTable(e) {\n  e.preventDefault();\n\n  const row = document.createElement('tr');\n  const nameInput = employeeForm.querySelector('input[name=\"name\"]');\n  const position = employeeForm.querySelector('input[name=\"position\"]');\n  const office = employeeForm.querySelector('select[name=\"office\"]');\n  const age = employeeForm.querySelector('input[name=\"age\"]');\n  const salary = employeeForm.querySelector('input[name=\"salary\"]');\n\n  const nameValue = nameInput.value;\n  const positionValue = position.value;\n  const officeValue = office.value;\n  const ageValue = age.value;\n  let salaryValue = salary.value;\n\n  const rowValue = [nameValue, positionValue, officeValue, ageValue];\n\n  const [isValid, errorInput] = checkValidateForm(\n    nameValue,\n    ageValue,\n    salaryValue,\n  );\n\n  salaryValue = `$${salaryValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}`;\n\n  rowValue.push(salaryValue);\n\n  if (isValid) {\n    rowValue.forEach((value) => {\n      row.insertAdjacentHTML('beforeend', `<td>${value}</td>`);\n    });\n\n    tbody.appendChild(row);\n\n    pushNotification(450, 450, 'Added Successfully.', null, 'success');\n    clearForm(nameInput, position, age, salary);\n  } else {\n    pushNotification(\n      600,\n      450,\n      `It is impossible to add: Error in the ${errorInput} field`,\n      errorInput,\n      'error',\n    );\n  }\n}\n\nemployeeForm.addEventListener('submit', addRowToTable);\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}