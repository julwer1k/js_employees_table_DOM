{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// write code here\nvar body = document.querySelector(\"body\");\nvar thead = document.querySelector(\"thead\");\nvar tbody = document.querySelector(\"tbody\");\nvar rows = Array.from(tbody.rows);\nvar isSortedASC = true;\nvar lastSortedColumn = -1;\nfunction sortTable(e) {\n    if (e.target.tagName === \"TH\") {\n        var column = e.target.cellIndex;\n        var type = e.target.textContent;\n        if (lastSortedColumn !== column) isSortedASC = true;\n        var sortedRows = rows.sort(function(a, b) {\n            var aText = a.cells[column].textContent;\n            var bText = b.cells[column].textContent;\n            if (type === \"Age\" || type === \"Salary\") {\n                var aNum = parseFloat(aText.replace(/[$,]/g, \"\"));\n                var bNum = parseFloat(bText.replace(/[$,]/g, \"\"));\n                if (isSortedASC) return aNum - bNum;\n                return bNum - aNum;\n            } else {\n                if (isSortedASC) return aText.localeCompare(bText);\n                return bText.localeCompare(aText);\n            }\n        });\n        tbody.innerHTML = \"\";\n        sortedRows.forEach(function(row) {\n            return tbody.appendChild(row);\n        });\n        isSortedASC = !isSortedASC;\n        lastSortedColumn = column;\n    }\n}\nthead.addEventListener(\"click\", sortTable);\nfunction highlightRow(e) {\n    if (e.target.tagName === \"TD\") {\n        var row = e.target.closest(\"tr\");\n        var activeRow = document.querySelector(\"tr.active\");\n        if (activeRow) activeRow.classList.remove(\"active\");\n        row.classList.add(\"active\");\n    }\n}\ntbody.addEventListener(\"click\", highlightRow);\nvar saveChanges = function(input, initialValue) {\n    if (input) {\n        var newValue = input.value.trim();\n        if (newValue === \"\") input.parentNode.textContent = initialValue;\n        else input.parentNode.textContent = newValue;\n        input.remove();\n    }\n};\nfunction toEditInput(row) {\n    var cells = row.querySelectorAll(\"td\");\n    cells.forEach(function(cell) {\n        var cellInput = null;\n        var initialValue = cell.textContent;\n        cell.addEventListener(\"dblclick\", function() {\n            if (cellInput) {\n                saveChanges(cellInput, initialValue);\n                cellInput = null;\n            } else {\n                var input = document.createElement(\"input\");\n                input.value = initialValue;\n                input.classList.add(\"cell-input\");\n                cell.textContent = \"\";\n                cell.appendChild(input);\n                input.focus();\n                cellInput = input;\n                input.addEventListener(\"blur\", function() {\n                    saveChanges(input, initialValue);\n                    cellInput = null;\n                });\n                input.addEventListener(\"keydown\", function(e) {\n                    if (e.key === \"Enter\") {\n                        saveChanges(input, initialValue);\n                        cellInput = null;\n                    }\n                });\n            }\n        });\n    });\n}\nrows.forEach(toEditInput);\n// Add Form\nvar employeeForm = document.createElement(\"form\");\nemployeeForm.classList.add(\"new-employee-form\");\nemployeeForm.insertAdjacentHTML(\"beforeend\", '\\n<label>Name:\\n  <input name=\"name\" type=\"text\" data-qa=\"name\" required autocomplete=\"off\">\\n</label>\\n<label>Position:\\n  <input name=\"position\" type=\"text\" data-qa=\"position\" required>\\n</label>\\n<label>Office:\\n  <select name=\"office\" data-qa=\"office\" required>\\n    <option value=\"Tokyo\">Tokyo</option>\\n    <option value=\"Singapore\">Singapore</option>\\n    <option value=\"London\">London</option>\\n    <option value=\"New Yor\">New Yor</option>\\n    <option value=\"Edinburgh\">Edinburgh</option>\\n    <option value=\"San Francisco\">San Francisco</option>\\n  </select>\\n</label>\\n<label>Age:\\n  <input name=\"age\" type=\"text\" data-qa=\"age\" required>\\n</label>\\n<label>Salary:\\n  <input name=\"salary\" type=\"text\" data-qa=\"salary\" required>\\n</label>\\n<button type=\"submit\">Save to table</button>\\n');\nbody.appendChild(employeeForm);\nvar pushNotification = function(posTop, posRight, title, errorInput, type) {\n    var description = \"\";\n    switch(errorInput){\n        case \"name\":\n            description = \"The name field must contain at least 4 characters\";\n            break;\n        case \"age\":\n            description = \"You must be at least 18 and not more than 90 years old.\\n        The text must be a number\";\n            break;\n        case \"salary\":\n            description = \"Your salary should be a number\";\n            break;\n        default:\n            description = \"Your form has been successfully added to the table\";\n    }\n    document.body.insertAdjacentHTML(\"beforeend\", '\\n    <div class=\"notification '.concat(type, '\" data-qa=\"notification\">\\n      <h2 class=\"title\">').concat(title, \"</h2>\\n      <p>\").concat(description, \"</p>\\n    </div>\\n  \"));\n    var notificationBlock = document.querySelector(\".notification:last-child\");\n    notificationBlock.style.top = posTop + \"px\";\n    notificationBlock.style.right = posRight + \"px\";\n    setTimeout(function() {\n        notificationBlock.remove();\n    }, 2000);\n};\nfunction checkValidateForm(nameValue, age, salary) {\n    var isNotAgeValid = Number(age) < 18 || Number(age) > 90;\n    var isNotSalaryValid = isNaN(Number(salary));\n    if (nameValue.length < 4) return [\n        false,\n        \"name\"\n    ];\n    else if (isNotAgeValid) return [\n        false,\n        \"age\"\n    ];\n    else if (isNotSalaryValid) return [\n        false,\n        \"salary\"\n    ];\n    return [\n        true,\n        null\n    ];\n}\nfunction clearForm() {\n    for(var _len = arguments.length, formValue = new Array(_len), _key = 0; _key < _len; _key++){\n        formValue[_key] = arguments[_key];\n    }\n    formValue.forEach(function(value) {\n        value.value = \"\";\n    });\n}\nfunction addRowToTable(e) {\n    e.preventDefault();\n    var row = document.createElement(\"tr\");\n    var nameInput = employeeForm.querySelector('input[name=\"name\"]');\n    var position = employeeForm.querySelector('input[name=\"position\"]');\n    var office = employeeForm.querySelector('select[name=\"office\"]');\n    var age = employeeForm.querySelector('input[name=\"age\"]');\n    var salary = employeeForm.querySelector('input[name=\"salary\"]');\n    var nameValue = nameInput.value;\n    var positionValue = position.value;\n    var officeValue = office.value;\n    var ageValue = age.value;\n    var salaryValue = salary.value;\n    var rowValue = [\n        nameValue,\n        positionValue,\n        officeValue,\n        ageValue\n    ];\n    var _checkValidateForm = _sliced_to_array(checkValidateForm(nameValue, ageValue, salaryValue), 2), isValid = _checkValidateForm[0], errorInput = _checkValidateForm[1];\n    salaryValue = \"$\".concat(salaryValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"));\n    rowValue.push(salaryValue);\n    if (isValid) {\n        rowValue.forEach(function(value) {\n            row.insertAdjacentHTML(\"beforeend\", \"<td>\".concat(value, \"</td>\"));\n        });\n        tbody.appendChild(row);\n        pushNotification(450, 450, \"Added Successfully.\", null, \"success\");\n        clearForm(nameInput, position, age, salary);\n    } else pushNotification(600, 450, \"It is impossible to add: Error in the \".concat(errorInput, \" field\"), errorInput, \"error\");\n}\nemployeeForm.addEventListener(\"submit\", addRowToTable);\n\n//# sourceMappingURL=index.56284f5f.js.map\n","'use strict';\n\n// write code here\nconst body = document.querySelector('body');\nconst thead = document.querySelector('thead');\nconst tbody = document.querySelector('tbody');\nconst rows = Array.from(tbody.rows);\n\nlet isSortedASC = true;\nlet lastSortedColumn = -1;\n\nfunction sortTable(e) {\n  if (e.target.tagName === 'TH') {\n    const column = e.target.cellIndex;\n    const type = e.target.textContent;\n\n    if (lastSortedColumn !== column) {\n      isSortedASC = true;\n    }\n\n    const sortedRows = rows.sort((a, b) => {\n      const aText = a.cells[column].textContent;\n      const bText = b.cells[column].textContent;\n\n      if (type === 'Age' || type === 'Salary') {\n        const aNum = parseFloat(aText.replace(/[$,]/g, ''));\n        const bNum = parseFloat(bText.replace(/[$,]/g, ''));\n\n        if (isSortedASC) {\n          return aNum - bNum;\n        }\n\n        return bNum - aNum;\n      } else {\n        if (isSortedASC) {\n          return aText.localeCompare(bText);\n        }\n\n        return bText.localeCompare(aText);\n      }\n    });\n\n    tbody.innerHTML = '';\n    sortedRows.forEach((row) => tbody.appendChild(row));\n\n    isSortedASC = !isSortedASC;\n    lastSortedColumn = column;\n  }\n}\n\nthead.addEventListener('click', sortTable);\n\nfunction highlightRow(e) {\n  if (e.target.tagName === 'TD') {\n    const row = e.target.closest('tr');\n    const activeRow = document.querySelector('tr.active');\n\n    if (activeRow) {\n      activeRow.classList.remove('active');\n    }\n\n    row.classList.add('active');\n  }\n}\n\ntbody.addEventListener('click', highlightRow);\n\nconst saveChanges = (input, initialValue) => {\n  if (input) {\n    const newValue = input.value.trim();\n\n    if (newValue === '') {\n      input.parentNode.textContent = initialValue;\n    } else {\n      input.parentNode.textContent = newValue;\n    }\n    input.remove();\n  }\n};\n\nfunction toEditInput(row) {\n  const cells = row.querySelectorAll('td');\n\n  cells.forEach((cell) => {\n    let cellInput = null;\n    const initialValue = cell.textContent;\n\n    cell.addEventListener('dblclick', () => {\n      if (cellInput) {\n        saveChanges(cellInput, initialValue);\n        cellInput = null;\n      } else {\n        const input = document.createElement('input');\n\n        input.value = initialValue;\n        input.classList.add('cell-input');\n        cell.textContent = '';\n        cell.appendChild(input);\n        input.focus();\n        cellInput = input;\n\n        input.addEventListener('blur', () => {\n          saveChanges(input, initialValue);\n          cellInput = null;\n        });\n\n        input.addEventListener('keydown', (e) => {\n          if (e.key === 'Enter') {\n            saveChanges(input, initialValue);\n            cellInput = null;\n          }\n        });\n      }\n    });\n  });\n}\n\nrows.forEach(toEditInput);\n\n// Add Form\nconst employeeForm = document.createElement('form');\n\nemployeeForm.classList.add('new-employee-form');\n\nemployeeForm.insertAdjacentHTML(\n  'beforeend',\n  `\n<label>Name:\n  <input name=\"name\" type=\"text\" data-qa=\"name\" required autocomplete=\"off\">\n</label>\n<label>Position:\n  <input name=\"position\" type=\"text\" data-qa=\"position\" required>\n</label>\n<label>Office:\n  <select name=\"office\" data-qa=\"office\" required>\n    <option value=\"Tokyo\">Tokyo</option>\n    <option value=\"Singapore\">Singapore</option>\n    <option value=\"London\">London</option>\n    <option value=\"New Yor\">New Yor</option>\n    <option value=\"Edinburgh\">Edinburgh</option>\n    <option value=\"San Francisco\">San Francisco</option>\n  </select>\n</label>\n<label>Age:\n  <input name=\"age\" type=\"text\" data-qa=\"age\" required>\n</label>\n<label>Salary:\n  <input name=\"salary\" type=\"text\" data-qa=\"salary\" required>\n</label>\n<button type=\"submit\">Save to table</button>\n`,\n);\nbody.appendChild(employeeForm);\n\nconst pushNotification = (posTop, posRight, title, errorInput, type) => {\n  let description = '';\n\n  switch (errorInput) {\n    case 'name':\n      description = 'The name field must contain at least 4 characters';\n      break;\n    case 'age':\n      description = `You must be at least 18 and not more than 90 years old.\n        The text must be a number`;\n      break;\n    case 'salary':\n      description = 'Your salary should be a number';\n      break;\n    default:\n      description = 'Your form has been successfully added to the table';\n  }\n\n  document.body.insertAdjacentHTML(\n    'beforeend',\n    `\n    <div class=\"notification ${type}\" data-qa=\"notification\">\n      <h2 class=\"title\">${title}</h2>\n      <p>${description}</p>\n    </div>\n  `,\n  );\n\n  const notificationBlock = document.querySelector('.notification:last-child');\n\n  notificationBlock.style.top = posTop + 'px';\n  notificationBlock.style.right = posRight + 'px';\n\n  setTimeout(() => {\n    notificationBlock.remove();\n  }, 2000);\n};\n\nfunction checkValidateForm(nameValue, age, salary) {\n  const isNotAgeValid = Number(age) < 18 || Number(age) > 90;\n  const isNotSalaryValid = isNaN(Number(salary));\n\n  if (nameValue.length < 4) {\n    return [false, 'name'];\n  } else if (isNotAgeValid) {\n    return [false, 'age'];\n  } else if (isNotSalaryValid) {\n    return [false, 'salary'];\n  }\n\n  return [true, null];\n}\n\nfunction clearForm(...formValue) {\n  formValue.forEach((value) => {\n    value.value = '';\n  });\n}\n\nfunction addRowToTable(e) {\n  e.preventDefault();\n\n  const row = document.createElement('tr');\n  const nameInput = employeeForm.querySelector('input[name=\"name\"]');\n  const position = employeeForm.querySelector('input[name=\"position\"]');\n  const office = employeeForm.querySelector('select[name=\"office\"]');\n  const age = employeeForm.querySelector('input[name=\"age\"]');\n  const salary = employeeForm.querySelector('input[name=\"salary\"]');\n\n  const nameValue = nameInput.value;\n  const positionValue = position.value;\n  const officeValue = office.value;\n  const ageValue = age.value;\n  let salaryValue = salary.value;\n\n  const rowValue = [nameValue, positionValue, officeValue, ageValue];\n\n  const [isValid, errorInput] = checkValidateForm(\n    nameValue,\n    ageValue,\n    salaryValue,\n  );\n\n  salaryValue = `$${salaryValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}`;\n\n  rowValue.push(salaryValue);\n\n  if (isValid) {\n    rowValue.forEach((value) => {\n      row.insertAdjacentHTML('beforeend', `<td>${value}</td>`);\n    });\n\n    tbody.appendChild(row);\n\n    pushNotification(450, 450, 'Added Successfully.', null, 'success');\n    clearForm(nameInput, position, age, salary);\n  } else {\n    pushNotification(\n      600,\n      450,\n      `It is impossible to add: Error in the ${errorInput} field`,\n      errorInput,\n      'error',\n    );\n  }\n}\n\nemployeeForm.addEventListener('submit', addRowToTable);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","body","document","querySelector","thead","tbody","rows","from","isSortedASC","lastSortedColumn","addEventListener","e","target","tagName","column","cellIndex","type","textContent","sortedRows","sort","a","b","aText","cells","bText","aNum","parseFloat","replace","bNum","localeCompare","innerHTML","forEach","row","appendChild","closest","activeRow","classList","remove","add","saveChanges","input","initialValue","newValue","value","trim","parentNode","querySelectorAll","cell","cellInput","createElement","focus","key","employeeForm","insertAdjacentHTML","pushNotification","posTop","posRight","title","errorInput","description","concat","notificationBlock","style","top","right","setTimeout","preventDefault","salary","isNotAgeValid","isNotSalaryValid","nameInput","position","office","age","nameValue","positionValue","officeValue","ageValue","salaryValue","rowValue","_checkValidateForm","Number","isNaN","_array_with_holes","isArray","_iterable_to_array_limit","_s","_e","_i","Symbol","iterator","_arr","_n","_d","call","next","done","push","err","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","slice","constructor","name","test","_non_iterable_rest","TypeError","isValid","clearForm","_len","arguments","formValue","_key"],"version":3,"file":"index.56284f5f.js.map"}